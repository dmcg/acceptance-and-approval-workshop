<?xml version="1.0" encoding="UTF-8"?>
<project name="build" default="again">
    <import file="exercise-lib.xml"/>

    <property name="report.dir" value="${module.exercise-lib.basedir}/out/reports"/>

    <property name="version" value="SNAPSHOT"/>

    <target name="package" depends="package.lib.final, package.source"/>

    <target name="package.lib.plain" depends="compile.module.exercise-lib.production">
        <jar destfile="out/data-fitting-plain.jar">
            <zipfileset dir="${exercise-lib.output.dir}" excludes="**/unstable/**"/>
            <zipfileset dir="${basedir}/src/" includes="META-INF/**"/>
        </jar>
    </target>

    <target name="package.lib.final" depends="package.lib.plain, taskdef.proguard">
        <proguard>
            <injar file="out/data-fitting-plain.jar"/>
            <injar refid="library.jama.classpath" filter="!META-INF/**"/>
            <libraryjar refid="library.guava.classpath"/>
            <libraryjar refid="library.junit.classpath"/>
            <libraryjar refid="library.pearlfish.classpath"/>
            <libraryjar file="${java.home}/lib/rt.jar"/>
            <outjar file="out/data-fitting.jar"/>

            <keep name="exercise.*">
                <field name="*"/>
                <method name="*"/>
            </keep>
            <keep name="exercise.internal.*" allowobfuscation="yes"/>
            <keepattribute name="Signature"/>
        </proguard>
    </target>

    <target name="package.source">
        <jar destfile="out/data-fitting-source.jar">
            <zipfileset dir="src" includes= "**" excludes="**/internal/**"/>
        </jar>
    </target>

    <target name="taskdef.proguard">
        <taskdef resource="proguard/ant/task.properties"
                 classpath="tools/proguard4.10/lib/proguard.jar"/>
    </target>

    <target name="test" depends="package.lib.final, compile.module.exercise-lib.tests">
        <delete dir="${report.dir}"/>
        <mkdir dir="${report.dir}/xml"/>
        <mkdir dir="${report.dir}/html"/>

        <junit printsummary="yes"
               haltonfailure="false"
               failureproperty="tests.failed"
               includeantruntime="false">

            <classpath>
                <pathelement location="${exercise-lib.testoutput.dir}"/>
                <pathelement location="out/data-fitting.jar"/>
                <path refid="library.guava.classpath"/>
                <path refid="library.junit.classpath"/>
                <path refid="library.pearlfish.classpath"/>
            </classpath>

            <formatter type="xml"/>

            <batchtest todir="${report.dir}/xml">
                <fileset dir="${exercise-lib.testoutput.dir}">
                    <include name="**/*Test.class"/>
                    <exclude name="**/Abstract*.class"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${report.dir}/xml">
            <fileset dir="${report.dir}/xml">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${report.dir}/html"/>
        </junitreport>

        <echo message="test report in file://${report.dir}/html/index.html"/>

        <fail if="${tests.failed}"/>
    </target>

    <target name="deploy" depends="test, package">
        <delete dir="../exercise/libs/data-fitting" includes="*.jar"/>
        <copy file="out/data-fitting.jar" todir="../exercise/libs/data-fitting"/>
    </target>

    <target name="real-clean">
        <delete dir="out"/>
    </target>

    <target name="again" depends="real-clean, test, package"/>
</project>
